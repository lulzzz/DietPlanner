@model MultiAttributeDecisionMaking.AhpModel

@{
    ViewBag.Title = "Pairwise";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>Oceny kryteriów parami</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      <h4>Porównaj parami każde z kryteriów oceny diety</h4>
      <table cellspacing="0" cellpadding="3" border="1" style="text-align:center">
        <tr>
          <td><b>Wartość</b></td>
          <td><b>Ocena elementu A względem B</b></td>
        </tr>
        <tr>
          <td>9</td>
          <td>A jest ekstremalnie preferowane</td>
        </tr>
        <tr>
          <td>7</td>
          <td>A jest bardzo silnie preferowane</td>
        </tr>
        <tr>
          <td>5</td>
          <td>A jest silnie preferowane</td>
        </tr>
        <tr>
          <td>3</td>
          <td>A jest słabo preferowane</td>
        </tr>
        <tr>
          <td>1</td>
          <td>A jest równoważne z B</td>
        </tr>
      </table>
      W lewej kolumnie znajduje się A, w prawej B. Zaznaczenie "odwróć" odwraca tą zależność - element w prawej kolumnie jest bardziej preferowany.
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      <div class="form-group">
        @Html.LabelFor(model => model.CostMacro, "Minimalizacja kosztów",htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
          @Html.EditorFor(model => model.CostMacro, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
          @Html.ValidationMessageFor(model => model.CostMacro, "", new { @class = "text-danger" })
        </div>
        @Html.LabelFor(model => model.CostMacro,"Zgodność z normami", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="checkbox col-md-2">
          @Html.EditorFor(model => model.InvertCostMacro)
          @Html.LabelFor(model => model.InvertCostMacro, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
          @Html.ValidationMessageFor(model => model.InvertCostMacro, "", new { @class = "text-danger" })
        </div>
      </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.TimeMacro, "Krótki czas przygotowania", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-3">
            @Html.EditorFor(model => model.TimeMacro, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
            @Html.ValidationMessageFor(model => model.TimeMacro, "", new { @class = "text-danger" })
          </div>
          @Html.LabelFor(model => model.TimeMacro, "Zgodność z normami", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="checkbox col-md-2">
            @Html.EditorFor(model => model.InvertTimeMacro)
            @Html.LabelFor(model => model.InvertTimeMacro, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.InvertTimeMacro, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeCost, "Krótki czas przygotowania", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-3">
            @Html.EditorFor(model => model.TimeCost, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
            @Html.ValidationMessageFor(model => model.TimeCost, "", new { @class = "text-danger" })
          </div>
          @Html.LabelFor(model => model.TimeCost, "Minimalizacja kosztów", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="checkbox col-md-2">
            @Html.EditorFor(model => model.InvertTimeCost)
            @Html.LabelFor(model => model.InvertTimeCost, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.InvertTimeCost, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrefMacro, "Zgodność z preferencjami", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-3">
            @Html.EditorFor(model => model.PrefMacro, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
            @Html.ValidationMessageFor(model => model.PrefMacro, "", new { @class = "text-danger" })
          </div>
          @Html.LabelFor(model => model.PrefMacro, "Zgodność z normami", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="checkbox col-md-2">
            @Html.EditorFor(model => model.InvertPrefMacro)
            @Html.LabelFor(model => model.InvertPrefMacro, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.InvertPrefMacro, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrefCost, "Zgodność z preferencjami", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-3">
            @Html.EditorFor(model => model.PrefCost, new { htmlAttributes = new { @class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
            @Html.ValidationMessageFor(model => model.PrefCost, "", new { @class = "text-danger" })
          </div>
          @Html.LabelFor(model => model.PrefCost, "Minimalizacja kosztów", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="checkbox col-md-2">
            @Html.EditorFor(model => model.InvertPrefCost)
            @Html.LabelFor(model => model.InvertPrefCost, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.InvertPrefCost, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrefTime, "Zgodność z preferencjami", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="col-md-3">
            @Html.EditorFor(model => model.PrefTime, new { htmlAttributes = new {@class = "form-control col-md-4", type = "number", min = "1", max = "9", step = "2", defaultValue = "1" } })
            @Html.ValidationMessageFor(model => model.PrefTime, "", new { @class = "text-danger" })
          </div>
          @Html.LabelFor(model => model.PrefTime, "Krótki czas przygotowania", htmlAttributes: new { @class = "control-label col-md-2" })
          <div class="checkbox col-md-2">
            @Html.EditorFor(model => model.InvertPrefTime)
            @Html.LabelFor(model => model.InvertPrefTime, "Odwróć", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.InvertPrefTime, "", new { @class = "text-danger" })
          </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}
